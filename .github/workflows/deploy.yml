name: Funtech deploy

on:
  workflow_call:


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Create .env-file via ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd funtech
            sudo cat > .env << _EOF_
              DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
              POSTGRES_DB=${{ secrets.POSTGRES_DB }}
              POSTGRES_USER=${{ secrets.POSTGRES_USER }}
              POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
              DB_HOST=${{ secrets.DB_HOST }}
              DB_PORT=${{ secrets.DB_PORT }}
              DB_NAME=${{ secrets.DB_NAME }}
              PROJECT_NAME=${{ secrets.PROJECT_NAME }}
              PROJECT_NAME_FRONT=${{ secrets.PROJECT_NAME_FRONT }}
              DOCKER_USERNAME_FRONT=${{ secrets.DOCKER_USERNAME_FRONT }}
              ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}
              SUPERUSER_PASSWORD=${{ secrets.SUPERUSER_PASSWORD }}
              SECRET_KEY=${{ secrets.SECRET_KEY }}
              DEBUG=${{ secrets.DEBUG }}
              REDIS_HOST=${{ secrets.REDIS_HOST }}
              REDIS_PORT=${{ secrets.REDIS_PORT }}
              CSRF_DOMAIN=${{ secrets.CSRF_DOMAIN }}
              EMAIL_HOST=${{ secrets.EMAIL_HOST }}
              EMAIL_PORT=${{ secrets.EMAIL_HOST_PORT }}
              EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}
              EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}
            _EOF_
      - name: Copy docker-compose.production.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docker-compose.production.yml"
          target: "funtech"
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd funtech
            sudo docker compose -f docker-compose.production.yml pull
            sudo docker compose -f docker-compose.production.yml down
            sudo docker compose -f docker-compose.production.yml up -d
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic --no-input
            sudo docker compose -f docker-compose.production.yml exec backend cp -r /app/static/. /static_backend/static/
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py make_admin
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py load_test_data
            sudo docker image prune -a -f --filter "until=24h"
